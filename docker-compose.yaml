version: '3.6'

services:
  postgres:
    image: postgres:12
    restart: always
    ports:
    - "5432:5432"
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v1.2.1
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: admin
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "supercalifragilistichespiralidoso" }'
  node-red:
    image: docker_repository/edison-node-red
    restart: always
    ports:
    - "1880:1880"
    environment:
      TZ: UTC
      NODE_RED_ENABLE_SAFE_MODE: "false"
      NODE_RED_ENABLE_PROJECTS: "false"
      FLOWS: edison-flows.json
    depends_on:
    - "postgres"
    - "graphql-engine"
  frontend:
    image: docker_repository/edison-fe
    restart: always
    ports:
      - "80:80"
    depends_on:
      - "postgres"
      - "graphql-engine"
      - "node-red"

volumes:
  db_data:
